
generator client {
  provider = "prisma-client-js"
}

generator markdown {
  provider = "prisma-markdown"
  output   = "./ERD.md"
  title    = "Shopping Mall"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id String @id
  name String
  email String @unique
  newsContents NewsContent[]
  comments Comment[]
  favorites Favorite[]
  bookmarks Bookmark[]
}

model NewsContent {
  id String @id @default(cuid())
  title String
  body String?//@db.VarChar()か@db.Textも検討
  imageUrl String?
  favorite Int @default(0)
  bookmark Int @default(0)

  quotedId String?//他のNewsContentの引用
  userId String
  
  quoted NewsContent? @relation("QuoteRelation", fields: [quotedId], references: [id])
  quotedBy NewsContent[] @relation("QuoteRelation")
  user User @relation(fields: [userId], references: [id])
  comments Comment[]
  favoriteBy Favorite[]
  bookmarkBy Bookmark[]
}

model Comment {
  id String @id @default(nanoid())
  body String//@db.VarChar()か@db.Textも検討

  commentIndex Int

  @@unique([newsContentId, commentIndex])

  userId String
  newsContentId String

  user User @relation(fields: [userId], references: [id])
  newsContent NewsContent @relation(fields: [newsContentId], references: [id])
}

model Bookmark {
  id String @id @default(cuid())
  
  userId String
  newsContentId String

  user User @relation(fields: [userId], references: [id])
  newsContent NewsContent @relation(fields: [newsContentId], references: [id])

  @@unique([userId, newsContentId])
}

model Favorite {
  id String @id @default(cuid())
  
  userId String
  newsContentId String

  user User @relation(fields: [userId], references: [id])
  newsContent NewsContent @relation(fields: [newsContentId], references: [id])

  @@unique([userId, newsContentId])
}

